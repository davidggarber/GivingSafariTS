<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="UTF-8" />
    <script> var exports = {}; </script>
    <script src="../js/kit25.js" />
    <script src="sync.js" />
    <link href="sync.css" rel="Stylesheet" type="text/css"></link>
    <script>
      //<![CDATA[
      const boiler = {
        safari: 'Admin',
        orientation: 'portrait',
        title: 'Puzzle Feedback',
        postSetup: doRefresh,
        reactiveBuilder: 'pageBody',
        lookup: {
          progress: [  // interpret progress values
            'unknown',
            'opened',
            'edited',
            'attempted',
            'unlocked',
            'solved',
          ]

        },
      };

      var firstLoad = true;
      var eventName = identifyEvent();
      var puzzleName = identifyPuzzle('Puzzle Feedback: ', 'Ratings.xhtml');

      function doRefresh() {

        var data = {
          eventName: eventName,
          puzzle: puzzleName,
        }
        queryServer('PuzzleFeedback', data, refreshWithResponse)
      }

      function refreshWithResponse(response) {
        var list = JSON.parse(response);
        var tbody = document.getElementById('list-tbody');
        
        // See what rows we already have
        var existing = rowIdSet(tbody, true);

        for (var row of list) {
          var id = "row-" + row['Progress'] + row['Feedback'] + row['Timestamp'];
          var tr = document.getElementById(id);
          if (tr) {
            // Already exists
            toggleClass(tr, 'missing', false);
            toggleClass(tr, 'new', false);
            refillFromTemplate(tr, 'feedCols', row);
            existing[id] = null;
          }
          else {
            var tr = appendFromTemplate(tbody, 'feedRow', row);
            toggleClass(tr, 'new', !firstLoad);
          }
        }

        // If any pre-existing rows have gone missing, tag them
        var missing = Object.entries(existing).filter(pair => pair[1]).map(pair => pair[0]);
        removeMissing(missing);

        firstLoad = false;
      }

      // ]]>
    </script>
    <style>
      tr:hover .team-name {
        font-weight: bold;
      }

      .rating {
        text-align: center;
      }
      .rating img {
        position: relative;
        top: 4px;
        height: 24px;
      }
    </style>
  </head>
  <body id="Local">
    <!--
        Drill down to the specific ratings for a single puzzle
      -->
    <div id="pageBody">
      <button onclick="doRefresh()">Refresh</button>
      <table>
        <thead>
          <tr id="header-row">
            <th>Progress</th>
            <th>Feedback</th>
            <th>Timestamp</th>
          </tr>
        </thead>
        <tbody id="list-tbody" class="alternate">
        </tbody>
      </table>

    </div>

    <template id="feedRow">
      <tr id="row-{Progress}{Feedback}{Timestamp}">
        <td class="progress"><use template="progress" val="{Progress}" /></td>
        <td class="feedback">{Feedback}</td>
        <td class="time">{Timestamp}</td>
      </tr>
    </template>

    <template id="feedCols">
      <td class="progress"><use template="progress" val="{Progress}" /></td>
      <td class="feedback">{Feedback}</td>
      <td class="time">{Timestamp}</td>
    </template>

    <template id="progress">
      {progress.[val]}
    </template>

  </body>
</html>
