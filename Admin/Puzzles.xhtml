<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="UTF-8" />
    <script> var exports = {}; </script>
    <script src="../js/kit25.js" />
    <script src="sync.js" />
    <link href="sync.css" rel="Stylesheet" type="text/css"></link>
    <script>
      //<![CDATA[
      const boiler = {
        safari: 'Admin',
        orientation: 'landscape',
        title: 'List Puzzles',
        postSetup: doRefresh,
        reactiveBuilder: 'pageBody',
        lookup: {},
      };

      var firstLoad = true;

      var eventName = identifyEvent();


      function doRefresh() {
        var data = {
          eventName: eventName,
          data: 'counts'
        }
        queryServer('PuzzleList', data, refreshWithResponse)
      }

      function refreshWithResponse(response) {
        var list = JSON.parse(response);
        var pList = list.filter(r => r.PuzzleType == "Puzzle").map(r => [r.PuzzleName, r.PlayerCount, r.TeamCount]);
        refreshTable("puzzle", pList);
        pList = list.filter(r => r.PuzzleType == "Meta").map(r => [r.PuzzleName, r.PlayerCount, r.TeamCount]);
        refreshTable("meta", pList);

        firstLoad = false;
      }

      function refreshTable(id, list) {
        var tbody = document.getElementById(id + '-tbody');
        
        // See what rows we already have
        var existing = rowIdSet(tbody, true);

        for (var row of list) {
          var name = row[0];
          var id = "puzzle-" + name;
          var tr = document.getElementById(id);
          if (tr) {
            // Already exists, but update the scores
            var td = tr.getElementsByClassName('pcount')[0];
            toggleClass(tr, 'new', td.innerText != row[1]);
            td.innerText = row[1];
            var td = tr.getElementsByClassName('tcount')[0];
            toggleClass(tr, 'new', td.innerText != row[2]);
            td.innerText = row[2];
            existing[id] = null;
          }
          else {
            var args = { name: name, pcount: row[1], tcount: row[2], encoded: encodeURIComponent(name) };
            var tr = appendFromTemplate(tbody, 'puzzleRow', args);
            toggleClass(tr, 'new', !firstLoad);
          }
        }

        // If any pre-existing rows have gone missing, tag them
        var missing = Object.entries(existing).filter(pair => pair[1]).map(pair => pair[0]);
        markAsMissing(missing);
      }

      // ]]>
    </script>
    <style>
      #page {
        height:12in;
      }
      .thName {
        min-width: 2in;
      }
      .center {
        text-align: center;
      }
      tr:hover .puzzle-name {
        font-weight: bold;
      }
    </style>
  </head>
  <body id="ListPuzzles">
    <!--
        A list of all known puzzles, with links to additional information.
      -->
    <div id="pageBody">
      <button onclick="doRefresh()">Refresh Puzzle List</button>
      <table>
        <thead>
          <tr>
            <th colspan="3"><h1>Puzzles</h1></th>
          </tr>
          <tr class="sortable">
            <use template="sortableTH" text="Name" cls="thName" />
            <use template="sortableTH" text="Attempts" />
            <use template="sortableTH" text="Team progress" />
            <use template="sortableTH" text="Individual Solves" cls="sort-numeric" />
            <use template="sortableTH" text="Team Solves" cls="sort-numeric" />
          </tr>
        </thead>
        <tbody id="puzzle-tbody" class="alternate">
        </tbody>
      </table>
      <table>
        <thead>
          <tr>
            <th colspan="3"><h1>Meta-Puzzles</h1></th>
          </tr>
          <tr class="sortable">
            <use template="sortableTH" text="Name" cls="thName" />
            <use template="sortableTH" text="Attempts" />
            <use template="sortableTH" text="Team progress" />
            <use template="sortableTH" text="Individual Solves" cls="sort-numeric" />
            <use template="sortableTH" text="Team Solves" cls="sort-numeric" />
          </tr>
        </thead>
        <tbody id="meta-tbody" class="alternate">          
        </tbody>
      </table>
    </div>

    <template id="sortableTH">
      <tth onclick="sortTable(this)" trim="all" class="{?cls}">
        {text}
        <span class="ascArrow">‚Üì</span>
        <span class="descArrow">‚Üë</span>
      </tth>
    </template>

    <template id="puzzleRow">
      <tr id="puzzle-{name}">
          <td class="puzzle-name">{name}</td>
          <td class="center"><a href="Attempts.xhtml?z={encoded}">‚úîÔ∏è‚ùå‚ùîü§îüëç</a></td>
          <td class="center"><a href="Completion.xhtml?z={encoded}">üòµü•≥</a></td>
          <td class="pcount center">{pcount}</td>
          <td class="tcount center">{tcount}</td>
      </tr>
    </template>
  </body>
</html>
