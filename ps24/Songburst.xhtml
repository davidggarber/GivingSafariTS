<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="UTF-8"></meta>
    <script> var exports = {}; </script>
    <script src="../js/kit25.js" />
    <script>
      const boiler = {
        safaris: puzzleSafari24,
        safari: 'ps24',
        'title': 'Songburst',
        'author': 'Ken Pacquer, Jen Traeger, and David Garber',
        'copyright': '2024',
        'paperSize': 'scrapbook',
        'textInput': true,
        'reactiveBuilder': true,
        'lookup': {
          songs: [
            { instrument:'Sax', mp3:'sax-ok', pattern:'5 4 4', numbers:'1=61 10=11 11=8 13=34'},
            { instrument:'Orchestra', mp3:'orch-imma', pattern:'3 3', numbers:'3=58 4=14 6=31'},
            { instrument:'Synth', mp3:'synth-stone', pattern:'5 4 3', numbers:'6=10 9=23 10=39 12=57'},
            { instrument:'Belgian jazz', mp3:'belg-jazz-qui', pattern:'Theme from 6 3', numbers:'7=46 8=33 9=18'},
            { instrument:'8-Bit + Bell', mp3:'8bit-cowbell', pattern:'3’1 4 3 6', numbers:'2=29 4=45 5=19 12=1'},
            { instrument:'Otamatone', mp3:'otama-amish', pattern:'7’1 8', numbers:'2=65 11=52 16=37'},
            { instrument:'Trombone festival', mp3:'trombone-doit', pattern:'6 6 6 8', numbers:'1=41 6=38 13=63 19=54'},
            { instrument:'Bardcore', mp3:'bardcore-enough', pattern:'1’1 4 3', numbers:'1=47 7=60 8=13 9=26'},
            { instrument:'Hold music', mp3:'hold-for-vader', pattern:'8 5', numbers:'1=5 5=51 6=21 12=32'},
            { instrument:'Clarinet', mp3:'clarinet-kiss-gun', pattern:'4 2', numbers:'1=20 2=50 5=25 6=66'},
            { instrument:'Bluegrass', mp3:'bluegrass-so-fast', pattern:'6', numbers:'1=16 2=24 3=64'},
            { instrument:'Violin quartet', mp3:'strings-make-a-deal', pattern:'7 2 4 4', numbers:'8=62 9=28 10=6 14=12'},
            { instrument:'Orchestra', mp3:'orch-hello', pattern:'6 4 4 6', numbers:'7=30 8=53 11=9 15=43'},
            { instrument:'Violin', mp3:'violin-help-me-dance', pattern:'6’ 5', numbers:'1=48 4=59 7=15'},
            { instrument:'Hammer dulcimer', mp3:'dulcimer-where-to-go', pattern:'5 5 1’ 4', numbers:'1=44 2=7 6=35 15=2'},
            { instrument:'String trio', mp3:'strings-knife', pattern:'4 2 2 6', numbers:'3=55 5=3 9=40 14=4'},
            { instrument:'Pool noodles', mp3:'pool-jim-pam', pattern:'Theme from 3 6', numbers:'4=27 5=22 9=42'},
            { instrument:'Marimba', mp3:'marimba-wedding', pattern:'2 3’1 4 5 5', numbers:'2=17 7=49 10=36 11=56'},
          ],
        },
      };
    </script>
    <style>
      table {
        width: 100%;
      }
      
      td {
        padding: 2px;
      }
      .playing td {
        background-color: yellow;
      }
      
      audio {
        height: 30px;
        width: 200px;
      }
      audio::-webkit-media-controls-timeline-container,
      audio::-webkit-media-controls-current-time-display,
      audio::-webkit-media-controls-time-remaining-display,
      audio::-webkit-media-controls-mute-button {
        display: none;
      }
      #title { 
        font-family: 'Special Elite';
        font-size: 36pt;
      }
      #Songburst .under-number {
        font-family: 'Verdana';
        font-size: 7pt;
      }
      #custom-enter {
        position: absolute;
        right: 0px;
        bottom: 0px;
        font-size: 7pt;
        cursor: help;
      }
      #custom-enter button {
        font-size: 7pt;
      }
      #extracted .letter-cell {
        margin-bottom: 30px;
      }
    </style>
    <script>
      // <![CDATA[
      var playing = null;
      function onPlay(aud) {
        if (playing != null && playing != aud) {
          playing.pause();
          toggleClass(playing.parentNode.parentNode, 'playing', false);
        }
        {
          playing = aud;
          if (aud) {
            toggleClass(aud.parentNode.parentNode, 'playing', true);
          }
        }
      }
      function toggleAudio(inp, key) {
        // Whenever the user types ENTER, play (or pause) the audio on that row
        if (key != 'Enter') {
          return;
        }
        var tr = findParentOfTag(inp, 'tr');
        if (tr != null) {
          var aud = tr.getElementsByTagName('audio')[0];
          if (aud == undefined) {
            return;
          }
          if (aud == playing) {
            aud.pause();
            onPlay(null);
          }
          else {
            onPlay(aud);
            aud.play();
          }
        }
      }
      // ]]>
    </script>
  </head>
  <body id="Songburst">
    <div id="pageBody">
      <div id="custom-enter"><button>⏎ Enter</button> toggles music, <button>⟳ Refresh</button> to start over</div>
      <div>
        <p>This is a music identification puzzle. Can you name these tunes?</p>
        <p><b>Type</b> titles of these songs directly into the page. Press <b>Enter</b> to toggle music on the current line. <b>Refresh</b> to reload or start over.</p>
        <p></p>
        <build>
          <ttable data-literal-style="box" data-extract-style="none" class="text-input-group" data-onchange="toggleAudio">
            <for each="song" in="songs">
              <ttr>
                <ttd>{song.instrument}</ttd>
                <ttd><audio ssrc="https://puzzlesafari.blob.core.windows.net/safari2024/{song.mp3}.mp3" controls="true" onplay="onPlay(this)" /></ttd>
                <ttd><pattern pattern="{song.pattern}" numbers="{song.numbers}"></pattern></ttd>
              </ttr>
            </for>
            <ttr>
              <ttd colspan="2">
                &nbsp;
              </ttd>
            </ttr>
          </ttable>
        </build>
        
        <!--<p>Clue:</p>-->
        <div>
          <pattern id="extracted" extract-numbered="1.1.1. 3 4 3 4 2 4,¶8,8,5,7,¶4,and 4 7" />
        </div>

      </div>
    </div>
  </body>
</html>
